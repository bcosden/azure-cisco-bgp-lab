{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.18.4.5664",
      "templateHash": "5399101100352276433"
    }
  },
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the servers"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account on the servers"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "secLocation": {
      "type": "string"
    },
    "myIP": {
      "type": "string"
    }
  },
  "variables": {
    "vmSize": "Standard_D2as_v5"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualWans",
      "apiVersion": "2022-11-01",
      "name": "VWan",
      "location": "[parameters('location')]",
      "properties": {
        "disableVpnEncryption": false,
        "allowBranchToBranchTraffic": true,
        "type": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2022-11-01",
      "name": "AzfwPolicy1",
      "location": "[parameters('location')]",
      "properties": {
        "threatIntelMode": "Alert"
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', 'AzfwPolicy1', 'DefaultNetworkRuleCollectionGroup1')]",
      "properties": {
        "priority": 300,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "NetworkRuleCollection",
            "priority": 100,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "Allow-All",
                "sourceAddresses": [
                  "*"
                ],
                "destinationAddresses": [
                  "*"
                ],
                "destinationPorts": [
                  "*"
                ],
                "ipProtocols": [
                  "Any"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy1')]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', 'AzfwPolicy1', 'DefaultDnatRuleCollectionGroup1')]",
      "properties": {
        "priority": 310,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyNatRuleCollection",
            "name": "DnatRuleCollection",
            "priority": 110,
            "action": {
              "type": "Dnat"
            },
            "rules": [
              {
                "ruleType": "NatRule",
                "name": "Dnat-Hub1Spoke1VM",
                "sourceAddresses": [
                  "[parameters('myIP')]"
                ],
                "destinationAddresses": [
                  "[reference(resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location'))), '2022-11-01').hubIPAddresses.publicIPs.addresses[0].address]"
                ],
                "destinationPorts": [
                  "3389"
                ],
                "translatedAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('location'))), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]",
                "translatedPort": "3389",
                "ipProtocols": [
                  "TCP"
                ]
              },
              {
                "ruleType": "NatRule",
                "name": "Dnat-Hub1Spoke2VM",
                "sourceAddresses": [
                  "[parameters('myIP')]"
                ],
                "destinationAddresses": [
                  "[reference(resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location'))), '2022-11-01').hubIPAddresses.publicIPs.addresses[0].address]"
                ],
                "destinationPorts": [
                  "3390"
                ],
                "translatedAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('location'))), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]",
                "translatedPort": "3389",
                "ipProtocols": [
                  "TCP"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}Spoke1VM', parameters('location')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('location')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}Spoke2VM', parameters('location')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('location')))]",
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy1')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'AzfwPolicy1', 'DefaultNetworkRuleCollectionGroup1')]"
      ]
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2022-11-01",
      "name": "[format('Az{0}HubFirewall', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "AZFW_Hub",
          "tier": "Standard"
        },
        "hubIPAddresses": {
          "publicIPs": {
            "count": 1
          }
        },
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('location')))]"
        },
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy1')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy1')]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2022-11-01",
      "name": "AzfwPolicy2",
      "location": "[parameters('secLocation')]",
      "properties": {
        "threatIntelMode": "Alert"
      }
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', 'AzfwPolicy2', 'DefaultNetworkRuleCollectionGroup')]",
      "properties": {
        "priority": 300,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
            "name": "NetworkRuleCollection",
            "priority": 100,
            "action": {
              "type": "Allow"
            },
            "rules": [
              {
                "ruleType": "NetworkRule",
                "name": "Allow-All",
                "sourceAddresses": [
                  "*"
                ],
                "destinationAddresses": [
                  "*"
                ],
                "destinationPorts": [
                  "*"
                ],
                "ipProtocols": [
                  "Any"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy2')]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', 'AzfwPolicy2', 'DefaultDnatRuleCollectionGroup1')]",
      "properties": {
        "priority": 310,
        "ruleCollections": [
          {
            "ruleCollectionType": "FirewallPolicyNatRuleCollection",
            "name": "DnatRuleCollection",
            "priority": 110,
            "action": {
              "type": "Dnat"
            },
            "rules": [
              {
                "ruleType": "NatRule",
                "name": "Dnat-Hub2Spoke1VM",
                "sourceAddresses": [
                  "[parameters('myIP')]"
                ],
                "destinationAddresses": [
                  "[reference(resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation'))), '2022-11-01').hubIPAddresses.publicIPs.addresses[0].address]"
                ],
                "destinationPorts": [
                  "3389"
                ],
                "translatedAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('secLocation'))), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]",
                "translatedPort": "3389",
                "ipProtocols": [
                  "TCP"
                ]
              },
              {
                "ruleType": "NatRule",
                "name": "Dnat-Hub2Spoke2VM",
                "sourceAddresses": [
                  "[parameters('myIP')]"
                ],
                "destinationAddresses": [
                  "[reference(resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation'))), '2022-11-01').hubIPAddresses.publicIPs.addresses[0].address]"
                ],
                "destinationPorts": [
                  "3390"
                ],
                "translatedAddress": "[reference(resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('secLocation'))), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]",
                "translatedPort": "3389",
                "ipProtocols": [
                  "TCP"
                ]
              }
            ]
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}Spoke1VM', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('secLocation')))]",
        "[resourceId('Microsoft.Compute/virtualMachines', format('{0}Spoke2VM', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy2')]",
        "[resourceId('Microsoft.Network/firewallPolicies/ruleCollectionGroups', 'AzfwPolicy2', 'DefaultNetworkRuleCollectionGroup')]"
      ]
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2022-11-01",
      "name": "[format('Az{0}HubFirewall', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "sku": {
          "name": "AZFW_Hub",
          "tier": "Standard"
        },
        "hubIPAddresses": {
          "publicIPs": {
            "count": 1
          }
        },
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]"
        },
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy2')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', 'AzfwPolicy2')]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/vpnGateways",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}VpnGateway', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "vpnGatewayScaleUnit": 1,
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]"
        },
        "bgpSettings": {
          "asn": 65515
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualWans', 'VWan')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Hub', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressPrefix": "10.8.0.0/24",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', 'VWan')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', 'VWan')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Hub', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "addressPrefix": "10.8.1.0/24",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', 'VWan')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', 'VWan')]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/routingIntent",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('location')), 'routeIntent1')]",
      "properties": {
        "routingPolicies": [
          {
            "destinations": [
              "Internet"
            ],
            "name": "RoutePolicyInternet",
            "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]"
          },
          {
            "destinations": [
              "PrivateTraffic"
            ],
            "name": "RoutePolicyPrivate",
            "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/routingIntent",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('secLocation')), 'routeIntent2')]",
      "properties": {
        "routingPolicies": [
          {
            "destinations": [
              "Internet"
            ],
            "name": "RoutePolicyInternet",
            "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]"
          },
          {
            "destinations": [
              "PrivateTraffic"
            ],
            "name": "RoutePolicyPrivate",
            "nextHop": "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.0.0/24"
          ]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Spoke1', parameters('location')), 'app')]",
      "properties": {
        "addressPrefix": "10.10.0.0/28",
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.10.1.0/24"
          ]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Spoke2', parameters('location')), 'app')]",
      "properties": {
        "addressPrefix": "10.10.1.0/28",
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('location')), format('{0}spoke1', parameters('location')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('location')))]"
        },
        "allowHubToRemoteVnetTransit": true,
        "allowRemoteVnetToUseHubVnetGateways": false,
        "enableInternetSecurity": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('location')), format('{0}spoke2', parameters('location')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('location')))]"
        },
        "allowHubToRemoteVnetTransit": true,
        "allowRemoteVnetToUseHubVnetGateways": false,
        "enableInternetSecurity": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1VM_nsg', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('myIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1VM_nic', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke1', parameters('location')), 'app')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke1VM_nsg', parameters('location')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke1VM_nsg', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke1', parameters('location')), 'app')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}Spoke1VM', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127
          }
        },
        "osProfile": {
          "computerName": "[format('{0}Spoke1VM', parameters('location'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('location')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2VM_nsg', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('myIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2VM_nic', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke2', parameters('location')), 'app')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke2VM_nsg', parameters('location')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke2VM_nsg', parameters('location')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke2', parameters('location')), 'app')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}Spoke2VM', parameters('location'))]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127
          }
        },
        "osProfile": {
          "computerName": "[format('{0}Spoke2VM', parameters('location'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('location')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('location')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.11.0.0/24"
          ]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Spoke1', parameters('secLocation')), 'app')]",
      "properties": {
        "addressPrefix": "10.11.0.0/28",
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.11.1.0/24"
          ]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Spoke2', parameters('secLocation')), 'app')]",
      "properties": {
        "addressPrefix": "10.11.1.0/28",
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('secLocation')), format('{0}spoke1', parameters('secLocation')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('secLocation')))]"
        },
        "allowHubToRemoteVnetTransit": true,
        "allowRemoteVnetToUseHubVnetGateways": false,
        "enableInternetSecurity": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke1', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', format('{0}Hub', parameters('secLocation')), format('{0}spoke2', parameters('secLocation')))]",
      "properties": {
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('secLocation')))]"
        },
        "allowHubToRemoteVnetTransit": true,
        "allowRemoteVnetToUseHubVnetGateways": false,
        "enableInternetSecurity": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/azureFirewalls', format('Az{0}HubFirewall', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualHubs', format('{0}Hub', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}Spoke2', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1VM_nsg', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('myIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke1VM_nic', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke1', parameters('secLocation')), 'app')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke1VM_nsg', parameters('secLocation')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke1VM_nsg', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke1', parameters('secLocation')), 'app')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}Spoke1VM', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127
          }
        },
        "osProfile": {
          "computerName": "[format('{0}Spoke1VM', parameters('secLocation'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('secLocation')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke1VM_nic', parameters('secLocation')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2VM_nsg', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "[parameters('myIP')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 300,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}Spoke2VM_nic', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke2', parameters('secLocation')), 'app')]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke2VM_nsg', parameters('secLocation')))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}Spoke2VM_nsg', parameters('secLocation')))]",
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}Spoke2', parameters('secLocation')), 'app')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('{0}Spoke2VM', parameters('secLocation'))]",
      "location": "[parameters('secLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            },
            "diskSizeGB": 127
          }
        },
        "osProfile": {
          "computerName": "[format('{0}Spoke2VM', parameters('secLocation'))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('secLocation')))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}Spoke2VM_nic', parameters('secLocation')))]"
      ]
    }
  ]
}